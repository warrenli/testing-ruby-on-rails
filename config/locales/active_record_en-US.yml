en-US:
  activerecord:
    errors:
      template:
        header:
          one: "{{count}} error prohibited this {{model}} from being saved"
          other: "{{count}} errors prohibited this {{model}} from being saved"
        # The variable :count is also available
        body: "There were problems with the following fields:"
      messages:
        inclusion: "is not included in the list"
        exclusion: "is reserved"
        invalid: "is invalid"
        confirmation: "doesn't match confirmation"
        accepted: "must be accepted"
        empty: "can't be empty"
        blank: "can't be blank"
        too_long: "is too long (maximum is {{count}} characters)"
        too_short: "is too short (minimum is {{count}} characters)"
        wrong_length: "is the wrong length (should be {{count}} characters)"
        taken: "has already been taken"
        not_a_number: "is not a number"
        greater_than: "must be greater than {{count}}"
        greater_than_or_equal_to: "must be greater than or equal to {{count}}"
        equal_to: "must be equal to {{count}}"
        less_than: "must be less than {{count}}"
        less_than_or_equal_to: "must be less than or equal to {{count}}"
        odd: "must be odd"
        even: "must be even"
        # Append your own errors here or at the model/attributes scope.
        #  msg_login_bad: "請使用英文字母、數字或 . - _ @"
        #  msg_name_bad: "avoid non-printing characters and \\&gt;&lt;&amp;/ please."
        #  msg_email_bad: "請使用正確電郵"

      # You can define own errors for models or model attributes.
      # The values :model, :attribute and :value are always available for interpolation.
      #
      # For example,
      #   models:
      #     user:
      #       blank: "This is a custom blank message for {{model}}: {{attribute}}"
      #       attributes:
      #         login:
      #           blank: "This is a custom blank message for User login"
      # Will define custom blank validation message for User model and
      # custom blank validation message for login attribute of User model.
      # models:

    # Translate model names. Used in Model.human_name().
      # For example,
      #   user: "Dude"
      # will translate User model name to "Dude"
    models:
      contact_form:
        one: "Contact Form"
        other: "Contact Form"

    # Translate model attribute names. Used in Model.human_attribute_name(attribute).
      # For example,
      #   user:
      #     login: "Handle"
      # will translate User attribute "login" as "Handle"
    attributes:
      contact_form:
        sender_name:  "Sender name"
        sender_email: "Sender email"
        recipient_name: "Recipient name"
        recipient_email: "Recipient email"
        subject: "Subject"
        message: "Message"

